name: Build and Deploy Project

on:
  push:
    branches:
      - main

permissions:
  packages: write
  contents: read

jobs:
  linter:
    runs-on: self-hosted
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv sync
          uv run pre-commit install

      - name: Lint pre-commit
        run: uv run pre-commit run --all-files --hook-stage manual
  
  tests:
    runs-on: self-hosted
    needs: linter
    env:
      POSTGRES_USER: pa_pan
      POSTGRES_PASSWORD: pa_pass
      POSTGRES_DB: pa_db
      DATABASE_URL: DATABASE_URL=postgres://pa_pan:pa_pass@localhost:5432/pa_db
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          
      - name: Cache Python environment
        uses: actions/cache@v4
        with:
          path: |
            .venv
            ~/.cache/uv
          key: venv-${{ runner.os }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            venv-${{ runner.os }}-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv venv
          uv sync
          uv run playwright install-deps
          
      - name: Create settings file
        run: |
          mv config/settings.example.yaml config/settings.yaml
          mv .env.example .env
          
      - name: Run PostgreSQL manually
        run: |
          docker stop pa_db || true
          docker rm pa_db || true
          docker run -d --name pa_db \
            -e POSTGRES_USER=pa_pan \
            -e POSTGRES_PASSWORD=pa_pass \
            -e POSTGRES_DB=pa_db \
            -p 5432:5432 \
            postgres:16.8-alpine
        
      - name: Run PyTest
        env:
          ENV_FOR_DYNACONF: prod
          DB_HOST: localhost
        run: |
          make run_prod &
          make test_dev
          
          
      - name: Stop PostgreSQL container
        if: always()
        run: docker rm -f pa_db
  
  build-and-push:
    runs-on: self-hosted
    needs: tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          tags: ghcr.io/victorvangeli/python-project-83:latest
          provenance: false

  deploy:
    needs: build-and-push

    runs-on: self-hosted

    steps:
      - name: Deploy on THIS VPS WHERE mounted GIT Runner
        run: |
          docker compose -f /home/vvd/page-analyzer/docker-compose.yaml pull
          docker compose -f /home/vvd/page-analyzer/docker-compose.yaml up -d --build
